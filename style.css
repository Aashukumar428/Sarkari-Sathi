// =========================================================
// 🌐 NAVBAR TOGGLE & ACTIVE LINK HIGHLIGHT
// =========================================================
const menuToggle = document.getElementById('menu-toggle');
const navLinks = document.getElementById('nav-links');

if (menuToggle && navLinks) {
  menuToggle.addEventListener('click', () => {
    const isOpen = navLinks.classList.toggle('open');
    menuToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false');
  });
}

const links = Array.from(document.querySelectorAll('#nav-links a'));
links.forEach(link => {
  link.addEventListener('click', () => {
    links.forEach(l => l.classList.remove('active'));
    link.classList.add('active');
    if (navLinks.classList.contains('open')) {
      navLinks.classList.remove('open');
      if (menuToggle) menuToggle.setAttribute('aria-expanded', 'false');
    }
  });

  link.addEventListener('keydown', e => {
    if (e.key === 'Enter' || e.key === ' ') {
      e.preventDefault();
      link.click();
      link.focus();
    }
  });
});

// Close navbar if clicked outside
document.addEventListener('click', e => {
  if (navLinks && menuToggle && !navLinks.contains(e.target) && !menuToggle.contains(e.target)) {
    navLinks.classList.remove('open');
    menuToggle.setAttribute('aria-expanded', 'false');
  }
});

// Highlight active link based on hash
window.addEventListener('load', () => {
  const hash = location.hash.slice(1);
  if (hash) {
    const match = links.find(l => l.getAttribute('href').slice(1) === hash);
    if (match) {
      links.forEach(l => l.classList.remove('active'));
      match.classList.add('active');
    }
  }
});


// =========================================================
// 🍔 SIDE MENU TOGGLE
// =========================================================
const sideMenuToggle = document.getElementById('side-menu-toggle');
const sideMenu = document.getElementById('side-menu');
const closeSideMenu = document.getElementById('close-side-menu');

if (sideMenuToggle && sideMenu) {
  sideMenuToggle.addEventListener('click', () => {
    sideMenu.classList.add('open');
    sideMenu.setAttribute('aria-hidden', 'false');
    const first = sideMenu.querySelector('button, a, input');
    if (first) first.focus();
  });
}

if (closeSideMenu && sideMenu) {
  closeSideMenu.addEventListener('click', () => {
    sideMenu.classList.remove('open');
    sideMenu.setAttribute('aria-hidden', 'true');
    if (sideMenuToggle) sideMenuToggle.focus();
  });
}

// Close side menu if clicked outside
document.addEventListener('click', e => {
  if (sideMenu && sideMenuToggle && sideMenu.classList.contains('open') &&
      !sideMenu.contains(e.target) && !sideMenuToggle.contains(e.target)) {
    sideMenu.classList.remove('open');
    sideMenu.setAttribute('aria-hidden', 'true');
  }
});


// =========================================================
// 🔐 LOGIN MODAL (FADE + ZOOM POPUP)
// =========================================================
const loginBtn = document.getElementById('login-btn');
const loginModal = document.getElementById('login-modal');
const loginClose = document.getElementById('login-close');

// Form toggles
const showLogin = document.getElementById('show-login');
const showSignup = document.getElementById('show-signup');
const loginForm = document.getElementById('login-form');
const signupForm = document.getElementById('signup-form');

// ---- Open Modal ----
function openModal() {
  if (!loginModal) return;
  loginModal.classList.add('active');
  loginModal.setAttribute('aria-hidden', 'false');
  document.body.style.overflow = 'hidden'; // Prevent background scroll
  const firstInput = loginModal.querySelector('input');
  if (firstInput) firstInput.focus();
}

// ---- Close Modal ----
function closeModal() {
  if (!loginModal) return;
  loginModal.classList.remove('active');
  loginModal.setAttribute('aria-hidden', 'true');
  document.body.style.overflow = 'auto';
}

// Open modal when clicking Login in hamburger menu
if (loginBtn) {
  loginBtn.addEventListener('click', () => {
    if (sideMenu) {
      sideMenu.classList.remove('open');
      sideMenu.setAttribute('aria-hidden', 'true');
    }
    openModal();
  });
}

// Close modal on × button
if (loginClose) loginClose.addEventListener('click', closeModal);

// Close modal when clicking outside popup
if (loginModal) {
  loginModal.addEventListener('click', (e) => {
    if (e.target === loginModal) closeModal();
  });
}

// Close modal on Escape key
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape' && loginModal.classList.contains('active')) closeModal();
});

// ---- Toggle between Sign In / Sign Up ----
if (showLogin && showSignup && loginForm && signupForm) {
  showLogin.addEventListener('click', () => {
    showLogin.classList.add('active');
    showSignup.classList.remove('active');
    loginForm.classList.remove('hidden');
    signupForm.classList.add('hidden');
  });

  showSignup.addEventListener('click', () => {
    showSignup.classList.add('active');
    showLogin.classList.remove('active');
    signupForm.classList.remove('hidden');
    loginForm.classList.add('hidden');
  });
}


// =========================================================
// 🚀 MISC / FUTURE LOGIC PLACEHOLDER
// =========================================================
// You can safely add future logic here like:
// - OTP verification integration
// - Avatar profile dropdown
// - Saving login state in localStorage
// - etc.
